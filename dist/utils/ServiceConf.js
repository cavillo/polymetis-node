"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const _ = __importStar(require("lodash"));
const dotenv_1 = require("dotenv");
// require our environment variables
dotenv_1.config();
exports.serviceConf = {
    environment: _.get(process.env, 'ENVIRONMENT'),
    service: _.get(process.env, 'SERVICE'),
    loggerMode: _.toNumber(_.get(process.env, 'LOGGER_MODE')),
};
exports.apiConf = {
    port: _.toNumber(_.get(process.env, 'API_PORT')),
    prefix: _.get(process.env, 'API_PREFIX'),
};
exports.rabbitConf = {
    username: _.get(process.env, 'RABBITMQ_USERNAME'),
    password: _.get(process.env, 'RABBITMQ_PASSWORD'),
    host: _.get(process.env, 'RABBITMQ_HOST'),
    port: _.toNumber(_.get(process.env, 'RABBITMQ_PORT')),
    exchange: exports.serviceConf.environment,
    queue: exports.serviceConf.service,
};
exports.configuration = {
    baseDir: __dirname,
    service: exports.serviceConf,
    rabbit: exports.rabbitConf,
    api: exports.apiConf,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VydmljZUNvbmYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMvU2VydmljZUNvbmYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsMENBQTRCO0FBQzVCLG1DQUFpRTtBQUNqRSxvQ0FBb0M7QUFDcEMsZUFBNkIsRUFBRSxDQUFDO0FBMEJuQixRQUFBLFdBQVcsR0FBeUI7SUFDL0MsV0FBVyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxhQUFhLENBQUM7SUFDOUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUM7SUFDdEMsVUFBVSxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGFBQWEsQ0FBQyxDQUFDO0NBQzFELENBQUM7QUFDVyxRQUFBLE9BQU8sR0FBcUI7SUFDdkMsSUFBSSxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsWUFBWSxDQUFDO0NBQ3pDLENBQUM7QUFDVyxRQUFBLFVBQVUsR0FBd0I7SUFDN0MsUUFBUSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztJQUNqRCxRQUFRLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLG1CQUFtQixDQUFDO0lBQ2pELElBQUksRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsZUFBZSxDQUFDO0lBQ3pDLElBQUksRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxlQUFlLENBQUMsQ0FBQztJQUNyRCxRQUFRLEVBQUUsbUJBQVcsQ0FBQyxXQUFXO0lBQ2pDLEtBQUssRUFBRSxtQkFBVyxDQUFDLE9BQU87Q0FDM0IsQ0FBQztBQUNXLFFBQUEsYUFBYSxHQUFrQjtJQUMxQyxPQUFPLEVBQUUsU0FBUztJQUNsQixPQUFPLEVBQUUsbUJBQVc7SUFDcEIsTUFBTSxFQUFFLGtCQUFVO0lBQ2xCLEdBQUcsRUFBRSxlQUFPO0NBQ2IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IGNvbmZpZyBhcyBjb25maWd1cmVFbnZpcm9ubWVudFZhcmlhYmxlcyB9IGZyb20gJ2RvdGVudic7XG4vLyByZXF1aXJlIG91ciBlbnZpcm9ubWVudCB2YXJpYWJsZXNcbmNvbmZpZ3VyZUVudmlyb25tZW50VmFyaWFibGVzKCk7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2VydmljZUNvbmZpZ3VyYXRpb24ge1xuICBlbnZpcm9ubWVudD86IHN0cmluZztcbiAgc2VydmljZT86IHN0cmluZztcbiAgbG9nZ2VyTW9kZT86IG51bWJlcjtcbn1cbmV4cG9ydCBpbnRlcmZhY2UgQXBpQ29uZmlndXJhdGlvbiB7XG4gIHBvcnQ/OiBudW1iZXI7XG4gIHByZWZpeD86IHN0cmluZztcbn1cbmV4cG9ydCBpbnRlcmZhY2UgUmFiYml0Q29uZmlndXJhdGlvbiB7XG4gIGhvc3Q/OiBzdHJpbmc7XG4gIHBvcnQ/OiBudW1iZXI7XG4gIHVzZXJuYW1lPzogc3RyaW5nO1xuICBwYXNzd29yZD86IHN0cmluZztcbiAgZXhjaGFuZ2U/OiBzdHJpbmc7XG4gIHF1ZXVlPzogc3RyaW5nO1xufVxuZXhwb3J0IGludGVyZmFjZSBDb25maWd1cmF0aW9uIHtcbiAgYmFzZURpcj86IHN0cmluZztcbiAgc2VydmljZT86IFNlcnZpY2VDb25maWd1cmF0aW9uO1xuICByYWJiaXQ/OiBSYWJiaXRDb25maWd1cmF0aW9uO1xuICBhcGk/OiBBcGlDb25maWd1cmF0aW9uO1xufVxuXG5leHBvcnQgY29uc3Qgc2VydmljZUNvbmY6IFNlcnZpY2VDb25maWd1cmF0aW9uID0ge1xuICBlbnZpcm9ubWVudDogXy5nZXQocHJvY2Vzcy5lbnYsICdFTlZJUk9OTUVOVCcpLFxuICBzZXJ2aWNlOiBfLmdldChwcm9jZXNzLmVudiwgJ1NFUlZJQ0UnKSxcbiAgbG9nZ2VyTW9kZTogXy50b051bWJlcihfLmdldChwcm9jZXNzLmVudiwgJ0xPR0dFUl9NT0RFJykpLFxufTtcbmV4cG9ydCBjb25zdCBhcGlDb25mOiBBcGlDb25maWd1cmF0aW9uID0ge1xuICBwb3J0OiBfLnRvTnVtYmVyKF8uZ2V0KHByb2Nlc3MuZW52LCAnQVBJX1BPUlQnKSksXG4gIHByZWZpeDogXy5nZXQocHJvY2Vzcy5lbnYsICdBUElfUFJFRklYJyksXG59O1xuZXhwb3J0IGNvbnN0IHJhYmJpdENvbmY6IFJhYmJpdENvbmZpZ3VyYXRpb24gPSB7XG4gIHVzZXJuYW1lOiBfLmdldChwcm9jZXNzLmVudiwgJ1JBQkJJVE1RX1VTRVJOQU1FJyksXG4gIHBhc3N3b3JkOiBfLmdldChwcm9jZXNzLmVudiwgJ1JBQkJJVE1RX1BBU1NXT1JEJyksXG4gIGhvc3Q6IF8uZ2V0KHByb2Nlc3MuZW52LCAnUkFCQklUTVFfSE9TVCcpLFxuICBwb3J0OiBfLnRvTnVtYmVyKF8uZ2V0KHByb2Nlc3MuZW52LCAnUkFCQklUTVFfUE9SVCcpKSxcbiAgZXhjaGFuZ2U6IHNlcnZpY2VDb25mLmVudmlyb25tZW50LFxuICBxdWV1ZTogc2VydmljZUNvbmYuc2VydmljZSxcbn07XG5leHBvcnQgY29uc3QgY29uZmlndXJhdGlvbjogQ29uZmlndXJhdGlvbiA9IHtcbiAgYmFzZURpcjogX19kaXJuYW1lLFxuICBzZXJ2aWNlOiBzZXJ2aWNlQ29uZixcbiAgcmFiYml0OiByYWJiaXRDb25mLFxuICBhcGk6IGFwaUNvbmYsXG59O1xuIl19