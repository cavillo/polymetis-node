"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const _ = __importStar(require("lodash"));
const dotenv_1 = require("dotenv");
// require our environment variables
dotenv_1.config();
exports.serviceConf = {
    environment: _.get(process.env, 'ENVIRONMENT'),
    service: _.get(process.env, 'SERVICE'),
    loggerMode: _.toNumber(_.get(process.env, 'LOGGER_MODE')),
};
exports.apiConf = {
    port: _.toNumber(_.get(process.env, 'API_PORT')),
    baseRoute: _.get(process.env, 'API_BASE_ROUTE'),
};
exports.rabbitConf = {
    username: _.get(process.env, 'RABBITMQ_USERNAME'),
    password: _.get(process.env, 'RABBITMQ_PASSWORD'),
    host: _.get(process.env, 'RABBITMQ_HOST'),
    port: _.toNumber(_.get(process.env, 'RABBITMQ_PORT')),
    exchange: exports.serviceConf.environment,
    queue: exports.serviceConf.service,
};
exports.configuration = {
    baseDir: __dirname,
    service: exports.serviceConf,
    rabbit: exports.rabbitConf,
    api: exports.apiConf,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VydmljZUNvbmYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMvU2VydmljZUNvbmYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsMENBQTRCO0FBQzVCLG1DQUFpRTtBQUNqRSxvQ0FBb0M7QUFDcEMsZUFBNkIsRUFBRSxDQUFDO0FBMEJuQixRQUFBLFdBQVcsR0FBeUI7SUFDL0MsV0FBVyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxhQUFhLENBQUM7SUFDOUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUM7SUFDdEMsVUFBVSxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGFBQWEsQ0FBQyxDQUFDO0NBQzFELENBQUM7QUFDVyxRQUFBLE9BQU8sR0FBcUI7SUFDdkMsSUFBSSxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQ2hELFNBQVMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLENBQUM7Q0FDaEQsQ0FBQztBQUNXLFFBQUEsVUFBVSxHQUF3QjtJQUM3QyxRQUFRLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLG1CQUFtQixDQUFDO0lBQ2pELFFBQVEsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsbUJBQW1CLENBQUM7SUFDakQsSUFBSSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxlQUFlLENBQUM7SUFDekMsSUFBSSxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGVBQWUsQ0FBQyxDQUFDO0lBQ3JELFFBQVEsRUFBRSxtQkFBVyxDQUFDLFdBQVc7SUFDakMsS0FBSyxFQUFFLG1CQUFXLENBQUMsT0FBTztDQUMzQixDQUFDO0FBQ1csUUFBQSxhQUFhLEdBQWtCO0lBQzFDLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLE9BQU8sRUFBRSxtQkFBVztJQUNwQixNQUFNLEVBQUUsa0JBQVU7SUFDbEIsR0FBRyxFQUFFLGVBQU87Q0FDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgY29uZmlnIGFzIGNvbmZpZ3VyZUVudmlyb25tZW50VmFyaWFibGVzIH0gZnJvbSAnZG90ZW52Jztcbi8vIHJlcXVpcmUgb3VyIGVudmlyb25tZW50IHZhcmlhYmxlc1xuY29uZmlndXJlRW52aXJvbm1lbnRWYXJpYWJsZXMoKTtcblxuZXhwb3J0IGludGVyZmFjZSBTZXJ2aWNlQ29uZmlndXJhdGlvbiB7XG4gIGVudmlyb25tZW50Pzogc3RyaW5nO1xuICBzZXJ2aWNlPzogc3RyaW5nO1xuICBsb2dnZXJNb2RlPzogbnVtYmVyO1xufVxuZXhwb3J0IGludGVyZmFjZSBBcGlDb25maWd1cmF0aW9uIHtcbiAgcG9ydD86IG51bWJlcjtcbiAgYmFzZVJvdXRlPzogc3RyaW5nO1xufVxuZXhwb3J0IGludGVyZmFjZSBSYWJiaXRDb25maWd1cmF0aW9uIHtcbiAgaG9zdD86IHN0cmluZztcbiAgcG9ydD86IG51bWJlcjtcbiAgdXNlcm5hbWU/OiBzdHJpbmc7XG4gIHBhc3N3b3JkPzogc3RyaW5nO1xuICBleGNoYW5nZT86IHN0cmluZztcbiAgcXVldWU/OiBzdHJpbmc7XG59XG5leHBvcnQgaW50ZXJmYWNlIENvbmZpZ3VyYXRpb24ge1xuICBiYXNlRGlyPzogc3RyaW5nO1xuICBzZXJ2aWNlPzogU2VydmljZUNvbmZpZ3VyYXRpb247XG4gIHJhYmJpdD86IFJhYmJpdENvbmZpZ3VyYXRpb247XG4gIGFwaT86IEFwaUNvbmZpZ3VyYXRpb247XG59XG5cbmV4cG9ydCBjb25zdCBzZXJ2aWNlQ29uZjogU2VydmljZUNvbmZpZ3VyYXRpb24gPSB7XG4gIGVudmlyb25tZW50OiBfLmdldChwcm9jZXNzLmVudiwgJ0VOVklST05NRU5UJyksXG4gIHNlcnZpY2U6IF8uZ2V0KHByb2Nlc3MuZW52LCAnU0VSVklDRScpLFxuICBsb2dnZXJNb2RlOiBfLnRvTnVtYmVyKF8uZ2V0KHByb2Nlc3MuZW52LCAnTE9HR0VSX01PREUnKSksXG59O1xuZXhwb3J0IGNvbnN0IGFwaUNvbmY6IEFwaUNvbmZpZ3VyYXRpb24gPSB7XG4gIHBvcnQ6IF8udG9OdW1iZXIoXy5nZXQocHJvY2Vzcy5lbnYsICdBUElfUE9SVCcpKSxcbiAgYmFzZVJvdXRlOiBfLmdldChwcm9jZXNzLmVudiwgJ0FQSV9CQVNFX1JPVVRFJyksXG59O1xuZXhwb3J0IGNvbnN0IHJhYmJpdENvbmY6IFJhYmJpdENvbmZpZ3VyYXRpb24gPSB7XG4gIHVzZXJuYW1lOiBfLmdldChwcm9jZXNzLmVudiwgJ1JBQkJJVE1RX1VTRVJOQU1FJyksXG4gIHBhc3N3b3JkOiBfLmdldChwcm9jZXNzLmVudiwgJ1JBQkJJVE1RX1BBU1NXT1JEJyksXG4gIGhvc3Q6IF8uZ2V0KHByb2Nlc3MuZW52LCAnUkFCQklUTVFfSE9TVCcpLFxuICBwb3J0OiBfLnRvTnVtYmVyKF8uZ2V0KHByb2Nlc3MuZW52LCAnUkFCQklUTVFfUE9SVCcpKSxcbiAgZXhjaGFuZ2U6IHNlcnZpY2VDb25mLmVudmlyb25tZW50LFxuICBxdWV1ZTogc2VydmljZUNvbmYuc2VydmljZSxcbn07XG5leHBvcnQgY29uc3QgY29uZmlndXJhdGlvbjogQ29uZmlndXJhdGlvbiA9IHtcbiAgYmFzZURpcjogX19kaXJuYW1lLFxuICBzZXJ2aWNlOiBzZXJ2aWNlQ29uZixcbiAgcmFiYml0OiByYWJiaXRDb25mLFxuICBhcGk6IGFwaUNvbmYsXG59O1xuIl19